Постоянный обмен, формат JSON, метод POST: 
Авторизация обсуждается (могу сделать любую)

Запрос:
{
    agreements: [
        {
            id: 'идентификатор договора',
            link: 'ссылка на файл договора',
            name: 'наименование договора',
            person_id: 'идентификатор лица, заключившего договор', // может быть лицевой счет
            date: 'дата заключения договора',
            refresh_date: 'дата последнего изменения',
            balance: 'баланс лица по конкретному договору',
        }...
    ],
    persons: [
        {
            id: 'идентификатор лица',
            ls: 'номер лицевого счета',
            name: 'наименование лица',
            contactName: 'имя контактного лица',
            type: "0, или 1, или 2 (физ лицо, ип, юр лицо)", <number>
            email: 'почта',
            number: 'номер телефона',
            recs: {
                //для всех
                "inn": "ИНН лица", <string>

                //для юр лиц и ип
                "rs": "Расчетный счет", <string>
                "kpp": "КПП", <string>
                "ks": "корреспондентский счет", <string>
                "ogrn": "огрн", <string>
                "bik": "БИК", <string>
                "bank": "наименование банка", <string>
                //для юр лиц и ип
            },
            adress: {
                //от возможностей должно зависеть, если нет такого или конкретного формата, то напиши, как более оптимально

                //для юр лиц и ип
                lawStreet: "юр адрес улица", <string>
                lawHouse: "юр адрес дом", <string>
                lawKv: "юр адрес квартира (офис)" <string>
                postStreet: "почт адрес улица", <string>
                postHouse: "почт адрес дом", <string>
                postKv: "почт адрес квартира (офис)" <string>
                //для юр лиц и ип
                
                //для всех
                factStreet: "факт адрес улица", <string>
                factHouse: "факт адрес дом", <string>
                factKv: "факт адрес квартира (офис)" <string>
            },
            refresh_date: 'дата последнего изменения',
        }...
    ],
    services: [
        {
            id: 'идентификатор услуги, на которую можно заключить договор',
            name: 'наименование услуги',
            //дополнительные поля, если они нужны для заключения договора, я предполагаю, что достаточно только id
        }...
    ],
    payments: [
        {
            id: 'идентификатор платежного документа',
            person_id: 'идентификатор лица, который должен оплатить или оплатил', // может быть лицевой счет
            agreement_id: 'идентификатор договора, к которому относится платежный документ',
            name: 'наименование платежного документа',
            number: 'номер платженого документа',
            date: 'дата выставления',
            status: 'статус оплаты',
            cost: 'сумма оплаты',
            link: 'ссылка на файл платежного документа',
            refresh_date: 'дата последнего изменения',
        }...
    ],
    account: [
        // здесь должны быть взаиморасчеты, я не знаю, что представляют собой эти документы, подкорректируй, если что-то не так
        {
            id: 'идентификатор взаиморасчета',
            name: 'наименование взаиморасчета',
            person_id: 'идентификатор лица, к которому относится взаиморасчет', // может быть лицевой счет
            date: 'дата взаиморасчета',
            agreement_id: 'идентификатор договора, к которому относится взаиморасчет',
            link: 'ссылка на документ взаиморасчета',
            refresh_date: 'дата последнего изменения',
        }...
    ]
}

Ответ: (код 200 или код ошибки) + тело.

В теле предлагаю отправлять в такой же структуре данные, которые в соответствии с refresh_id были обновлены позже, чем в 1с. 
Если клиент оплатил что-то на сайте, то статус оплаты моментально изменится в базе данных на сайте. 
Если в базе данных сайта оплата совершена, а в 1с нет, вне зависимости от даты последнего обновления в базу данных на сайте будет внесены данные из 1с. 
Соответственно даже более свежие данные по оплатам в 1с не отправляются.
С балансом аналогично.

Если в базе данных 1с нет каких-то данных, то присылается значение null или пустая строка.